// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URI")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                  String                @id @default(cuid())
  name                String?
  email               String?               @unique
  emailVerified       DateTime?
  image               String?
  accounts            Account[]
  sessions            Session[]
  blogPosts           BlogPost[]
  BlogPostChatMessage BlogPostChatMessage[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BlogPost {
  id                  Int                   @id @default(autoincrement())
  title               String
  date                String
  description         String
  thumbnailUrl        String
  demoUrl             String
  steps               BlogPostStep[]
  email               String
  user                User                  @relation(fields: [email], references: [email])
  BlogPostChatMessage BlogPostChatMessage[]
}

model BlogPostChatMessage {
  id         Int      @id @default(autoincrement())
  text       String
  date       String
  blogPostId Int
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  blogPost   BlogPost @relation(fields: [blogPostId], references: [id])
}

model BlogPostStep {
  id         Int                   @id @default(autoincrement())
  title      String
  code       String
  index      Int
  bullets    BlogPostStepBullets[]
  blogPost   BlogPost              @relation(fields: [blogPostId], references: [id])
  blogPostId Int
}

model BlogPostStepBullets {
  id     Int          @id @default(autoincrement())
  text   String
  index  Int
  step   BlogPostStep @relation(fields: [stepId], references: [id])
  stepId Int
}
